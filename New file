import torch
from doctr.io import DocumentFile
from doctr.models import ocr_predictor

# -------------------------------
# 1. Load PDF / Image
# -------------------------------
# Single PDF with multiple pages
doc = DocumentFile.from_pdf("proposal_form.pdf")

# For single image instead:
# doc = DocumentFile.from_images("handwritten_form.jpg")

# -------------------------------
# 2. Load OCR Model (detector + recognizer)
# -------------------------------
# Pretrained DBResNet50 for detection + CRNN_VGG16_BN for recognition
# Other combos: 'linknet_resnet18', 'mobilenet_v3_small', etc.
predictor = ocr_predictor(
    det_arch="db_resnet50",
    reco_arch="crnn_vgg16_bn",
    pretrained=True
)

# Send to GPU if available
if torch.cuda.is_available():
    predictor = predictor.cuda()

# -------------------------------
# 3. Run OCR
# -------------------------------
result = predictor(doc)

# -------------------------------
# 4. Export Results
# -------------------------------
# Get structured output as dict
json_output = result.export()

# Save to file
import json
with open("proposal_result.json", "w", encoding="utf-8") as f:
    json.dump(json_output, f, indent=2, ensure_ascii=False)

# -------------------------------
# 5. Pretty Print Example Output
# -------------------------------
for page_idx, page in enumerate(json_output["pages"], start=1):
    print(f"\nüìÑ Page {page_idx}:")
    for block in page["blocks"]:
        for line in block["lines"]:
            text = " ".join([word["value"] for word in line["words"]])
            print("üìù", text)